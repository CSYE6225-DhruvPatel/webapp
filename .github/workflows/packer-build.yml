name: Build Packer Image

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install postgresql postgresql-contrib -y

    - name: Start PostgreSQL Service
      run: sudo service postgresql start

    - name: Verify PostgreSQL Service
      run: sudo service postgresql status

    - name: Change PostgreSQL Password
      run: |
        sudo -u postgres psql -c "ALTER ROLE ${{ secrets.USERNAME }} WITH PASSWORD '${{ secrets.PASSWORD }}';"

    - name: Create Database
      run: sudo -u ${{ secrets.USERNAME }} psql -c 'CREATE DATABASE ${{ secrets.DBNAME }};'

    - name: "create environment varible"
      run: |
        touch .env
        echo DBNAME=${{ secrets.DBNAME}} >> .env
        echo USERNAME=${{ secrets.USERNAME }} >> .env
        echo PASSWORD=${{ secrets.PASSWORD }} >> .env
        echo DBHOST=${{ secrets.DBHOST }} >> .env

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install
    
    - name: Create webapp For log
      run: | 
        sudo mkdir -p /var/log/webapp
        sudo chmod -R 770 /var/log/webapp

    - name: Run Tests
      run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Environment Variables
      run: |
        touch .env
        echo "HOST=${{ secrets.HOST }}" >> .env
        echo "DBNAME=${{ secrets.DBNAME }}" >> .env
        echo "USERNAME=${{ secrets.USERNAME }}" >> .env
        echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
    
    - name: Create Repository Zip with .env
      run: zip -r webapp.zip .env *

    - name: Create webapp For log
      run: | 
        sudo mkdir -p /var/log/webapp
        sudo chmod -R 770 /var/log/webapp

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: 'Setup Packer Gcloud Plugin'
      run: 'packer plugins install github.com/hashicorp/googlecompute'
    
    - name: Packer Init
      run: packer init ./packer/gcp.pkr.hcl

    - name: Run Packer Build
      run: |
        packer build -var 'project_id='${{ secrets.GCP_PROJECT_NAME }} packer/gcp.pkr.hcl
